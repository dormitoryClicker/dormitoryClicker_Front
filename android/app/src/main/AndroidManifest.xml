<manifest
    xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.example.wmc_test">

    <uses-permission android:name="android.permission.INTERNET" />

    <!--local notification 권한 설정 (안드로이드) -->
    <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED"/>
    <uses-permission android:name="android.permission.VIBRATE"/>
    <uses-permission android:name="android.permission.WAKE_LOCK"/>
    <uses-permission android:name="android.permission.USE_FULL_SCREEN_INTENT"/>
    <uses-permission android:name="android.permission.FOREGROUND_SERVICE"/>
    <!--local notification 권한 설정 (안드로이드) -->

    <!--안드로이드 부팅시 내가 만든 App 실행시키기
        진동 울리기
        장금 화면에서 깨우기
        time-sensitive하게 중요한 notification은 fullscreen Intent를 사용 ->  background상태에서도 Activity를 띄울 수 있다.
        서비스 중지나 포그라운드 제거되지않는 한 알림 해제 불가
       -->

    <!-- url_launcher 를 사용하기 위해 추가됨 -->
    <queries>
        <intent>
            <action android:name="android.intent.action.SEND" />
            <data android:mimeType="*/*" />
            <!--<action android:name="android.intent.action.SENDTO" />
            <data android:scheme="mailto" />-->
        </intent>
    </queries>


    <application
        android:label="Dormitory Clicker"
        android:name="${applicationName}"
        android:icon="@mipmap/ic_launcher">
        <activity
            android:name=".MainActivity"
            android:exported="true"
            android:launchMode="singleTop"
            android:theme="@style/LaunchTheme"
            android:configChanges="orientation|keyboardHidden|keyboard|screenSize|smallestScreenSize|locale|layoutDirection|fontScale|screenLayout|density|uiMode"
            android:hardwareAccelerated="true"
            android:windowSoftInputMode="adjustResize"
            android:turnScreenOn="true">
            <!-- Specifies an Android theme to apply to this Activity as soon as
                 the Android process has started. This theme is visible to the user
                 while the Flutter UI initializes. After that, this theme continues
                 to determine the Window background behind the Flutter UI. -->
            <meta-data
                android:name="io.flutter.embedding.android.NormalTheme"
                android:resource="@style/NormalTheme"
                />
            <intent-filter>
                <action android:name="android.intent.action.MAIN"/>
                <category android:name="android.intent.category.LAUNCHER"/>
            </intent-filter>
        </activity>
        <!-- local notification 재부팅 및 업데이트 시에도 작동하기 위해 설정 -->
        <receiver android:name="com.dexterous.flutterlocalnotifications.ScheduledNotificationReceiver"/>
        <receiver android:name="com.dexterous.flutterlocalnotifications.ScheduledNotificationBootReceiver">
            <intent-filter>
                <action android:name="android.intent.action.BOOT_COMPLETED"/>
                <action android:name="android.intent.action.MY_PACKAGE_REPLACED"/>
                <action android:name="android.intent.action.QUICKBOOT_POWERON" />
                <action android:name="com.htc.intent.action.QUICKBOOT_POWERON"/>
            </intent-filter>
        </receiver>
        <!-- local notification 재부팅 및 업데이트 시에도 작동하기 위해 설정 -->


        <!-- Don't delete the meta-data below.
             This is used by the Flutter tool to generate GeneratedPluginRegistrant.java -->
        <meta-data
            android:name="flutterEmbedding"
            android:value="2" />
    </application>
</manifest>